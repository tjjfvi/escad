diff --git a/node_modules/browserfs/dist/browserfs.js b/node_modules/browserfs/dist/browserfs.js
index 675051f..ee1e610 100644
--- a/node_modules/browserfs/dist/browserfs.js
+++ b/node_modules/browserfs/dist/browserfs.js
@@ -124,8 +124,9 @@ return /******/ (function(modules) { // webpackBootstrap
 	        this.errno = type;
 	        this.code = ErrorCode[type];
 	        this.path = path$$1;
-	        this.stack = new Error().stack;
-	        this.message = "Error: " + (this.code) + ": " + message + (this.path ? (", '" + (this.path) + "'") : '');
+					message = (this.code) + ": " + message + (this.path ? (", '" + (this.path) + "'") : '');
+	        this.stack = new Error(message).stack;
+	        this.message = "Error: " + message;
 	    }
 	
 	     if ( Error ) ApiError.__proto__ = Error;
@@ -531,7 +532,7 @@ return /******/ (function(modules) { // webpackBootstrap
 	 * @hidden
 	 */
 	function normalizeOptions(options, defEnc, defFlag, defMode) {
-	    switch (typeof options) {
+	    switch (typeof (options || undefined)) {
 	        case 'object':
 	            return {
 	                encoding: typeof options['encoding'] !== 'undefined' ? options['encoding'] : defEnc,
@@ -12365,14 +12366,14 @@ return /******/ (function(modules) { // webpackBootstrap
 	                else if (arg instanceof FileFlag) {
 	                    return fileFlagLocal2Remote(arg);
 	                }
-	                else if (arg instanceof Buffer) {
+	                else if (arg instanceof Buffer || arg instanceof Uint8Array) {
 	                    return bufferLocal2Remote(arg);
 	                }
 	                else if (arg instanceof Error) {
 	                    return errorLocal2Remote(arg);
 	                }
 	                else {
-	                    return "Unknown argument";
+	                    return arg;
 	                }
 	            case "function":
 	                return this._callbackConverter.toRemoteArg(arg);
