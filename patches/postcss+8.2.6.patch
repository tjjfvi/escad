diff --git a/node_modules/postcss/lib/input.js b/node_modules/postcss/lib/input.js
index ad89d38..749fb36 100644
--- a/node_modules/postcss/lib/input.js
+++ b/node_modules/postcss/lib/input.js
@@ -1,6 +1,10 @@
 'use strict'
 
 let { fileURLToPath, pathToFileURL } = require('url')
+
+pathToFileURL = pathToFileURL || (path => new URL("file://" + path));
+fileURLToPath = fileURLToPath || (url => url.href.slice("file://".length));
+
 let { resolve, isAbsolute } = require('path')
 let { nanoid } = require('nanoid/non-secure')
 
@@ -11,7 +15,7 @@ let PreviousMap = require('./previous-map')
 let fromOffsetCache = Symbol('fromOffset cache')
 
 class Input {
-  constructor (css, opts = {}) {
+  constructor(css, opts = {}) {
     if (
       css === null ||
       typeof css === 'undefined' ||
@@ -50,7 +54,7 @@ class Input {
     if (this.map) this.map.file = this.from
   }
 
-  fromOffset (offset) {
+  fromOffset(offset) {
     let lastLine, lineToIndex
     if (!this[fromOffsetCache]) {
       let lines = this.css.split('\n')
@@ -92,7 +96,7 @@ class Input {
     }
   }
 
-  error (message, line, column, opts = {}) {
+  error(message, line, column, opts = {}) {
     let result
     if (!column) {
       let pos = this.fromOffset(line)
@@ -129,7 +133,7 @@ class Input {
     return result
   }
 
-  origin (line, column) {
+  origin(line, column) {
     if (!this.map) return false
     let consumer = this.map.consumer()
 
@@ -163,18 +167,18 @@ class Input {
     return result
   }
 
-  mapResolve (file) {
+  mapResolve(file) {
     if (/^\w+:\/\//.test(file)) {
       return file
     }
     return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)
   }
 
-  get from () {
+  get from() {
     return this.file || this.id
   }
 
-  toJSON () {
+  toJSON() {
     let json = {}
     for (let name of ['hasBOM', 'css', 'file', 'id']) {
       if (this[name] != null) {
