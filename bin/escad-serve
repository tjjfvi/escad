#!/usr/bin/env node --harmony-weak-refs

const commander = require("commander");
const path = require("path");
const os = require("os");
const fs = require("fs");

commander
  .usage("[options] <file>")
  .option("-p, --port <port>", "port to host server on", 8080)
  .option("-d, --watch-dir <dir>", "directory to watch (default: basedir of <file>)")
  .option("--artifacts <dir>", "artifact directory", path.join(os.tmpdir(), "escad-artifacts"))
  .option("--clean", "clean artifacts directory")
  .parse(process.argv);

if(commander.args.length !== 1)
  return commander.outputHelp();

let { port, watchDir, artifacts: artifactsDir, clean } = commander;
artifactsDir = path.resolve(artifactsDir);
let [ file ] = commander.args;

if(clean)
  fs.rmdirSync(artifactsDir, { recursive: true });

["products", "exports", "trees"].map(d => fs.mkdirSync(path.join(artifactsDir, d), { recursive: true }))

const loadFile = path.resolve(file);
const loadDir = path.dirname(path.resolve(watchDir || loadFile));

Object.assign(require("../src/server/config"), { port: +port, loadFile, loadDir, artifactsDir });

require("@babel/register");
require("@babel/polyfill");

require("../src/server/server");
